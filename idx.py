import tensorflow as tf

## 原始的索引获取方式
a = tf.random.normal([1,5,5,3],mean = 0, stddev = 1)
print(a)
# tf.Tensor(
# [[[[ 1.2971184  -1.0599355   0.6305747 ]
#    [ 0.2465769  -1.4310956  -0.34480587]
#    [-0.80761445 -0.21933277 -0.7535367 ]
#    [-1.0856693   0.518101   -1.558287  ]
#    [ 0.52532005 -1.6736246   0.77594006]]

#   [[ 0.50358105  0.02567294  0.09765792]
#    [-1.9307231   1.7298617   0.08302105]
#    [-0.00550217 -0.11278151 -0.73807555]
#    [ 0.7014458   0.9110316  -0.9111619 ]
#    [-0.1807555   1.3928152  -0.43456542]]

#   [[ 0.09100682 -2.2972383  -2.1905203 ]
#    [ 0.5729049   0.76459515  0.8812555 ]
#    [ 0.05535003  1.4566649  -0.6404839 ]
#    [ 2.2234523  -0.78042275 -0.19975396]
#    [-2.3125508  -1.3738755  -0.19939598]]

#   [[-0.20377763  0.02711659 -0.01030762]
#    [-0.33755073  1.3087186  -0.7988897 ]
#    [-0.15930514  1.5078037   0.11544617]
#    [ 0.2669433  -0.6618727  -1.7878953 ]
#    [ 2.4762974   0.07105265 -0.3481675 ]]

#   [[ 0.94867307 -0.7556371   0.89510596]
#    [ 1.7894095  -0.6563998  -0.6184883 ]
#    [-1.0853325  -1.4929543  -1.3246726 ]
#    [-0.28931025 -0.9090783   0.4092453 ]
#    [-0.6530883   0.6820438  -0.44169617]]]], shape=(1, 5, 5, 3), dtype=float32)
print(a[0][0])
# [[ 1.2971184  -1.0599355   0.6305747 ]
#  [ 0.2465769  -1.4310956  -0.34480587]
#  [-0.80761445 -0.21933277 -0.7535367 ]
#  [-1.0856693   0.518101   -1.558287  ]
#  [ 0.52532005 -1.6736246   0.77594006]], shape=(5, 3), dtype=float32)

print(a[0][0][0])
# tf.Tensor([-2.8401275   0.05141541 -0.10307934], shape=(3,), dtype=float32)

print(a[0][0][0][2])
# tf.Tensor(-0.10307934, shape=(), dtype=float32)

## numpy风格的索引获取方式
a1 = tf.random.normal([4,28,28,3],mean = 0, stddev = 1)

print(a1[1].shape) # (28, 28, 3)
print(a1[1,2].shape) # (28, 3)
print(a1[1,2,3].shape) # (3,)
print(a1[1,2,3,2].shape) # ()